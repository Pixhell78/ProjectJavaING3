/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vue;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
        
/**
 *
 * @author Hugo
 */
public class ajoutcours extends javax.swing.JFrame {
    int idUtilisateur =0;
    int h;
         public int getId() {
    return idUtilisateur;
    }

  public void setId(int id) {
    this.idUtilisateur = id;
  }
    public ajoutcours() {
        initComponents();
    }

    public ajoutcours(int id) throws ClassNotFoundException, SQLException{
        initComponents();
        Statement stmt;
    Connection conn;
    ResultSet rset;
    PreparedStatement pst;
    String nameDatabase = "emploisdutemps";
    String loginDatabase = "root";
    String passwordDatabase = "";
    this.idUtilisateur = id;

        
        
            Class.forName("com.mysql.jdbc.Driver");
            String urlDatabase = "jdbc:mysql://localhost:3306/" + nameDatabase;
            conn = DriverManager.getConnection(urlDatabase, loginDatabase, passwordDatabase);
            stmt = conn.createStatement();
            
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `promotion` ORDER BY NOM");
            while(rset.next()){
            this.Promo.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `groupe` ORDER BY NOM");
            while(rset.next()){
            this.Td.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `site` ORDER BY NOM");
            while(rset.next()){
            this.Site.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `salle` ORDER BY NOM");
            while(rset.next()){
            this.Salle.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `type_cours` ORDER BY NOM");
            while(rset.next()){
            this.TypeCours.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT NOM FROM `cours` ORDER BY NOM");
            while(rset.next()){
            this.Cours.addItem(rset.getString("NOM"));
             }
            
            rset = stmt.executeQuery("SELECT DISTINCT u.NOM FROM Utilisateur u inner join enseignant e on e.ID_UTILISATEUR = u.id ORDER BY u.NOM");
            while(rset.next()){
            this.Professeur.addItem(rset.getString("NOM"));
             }
            
            
            DefaultTableModel model = new DefaultTableModel(new String [] {
                "ID", "Professeur", "Cours", "Semaine", "Jour", "Promo", "TD"
            },0);
            this.jTable1.setModel(model);
           

            rset = stmt.executeQuery("SELECT DISTINCT s.ID,pr.nom, s.JOUR, s.SEMAINE, s.HEURE_DEBUT, c.NOM, salle.NOM, site.NOM, u.NOM , tc.NOM FROM seance s inner join cours c on c.ID = s.ID_COURS inner join seance_salle ss on ss.ID_SEANCE=s.id inner join seance_groupes sg on sg.ID_SEANCE=s.id inner join seance_enseignant se on se.ID_SEANCE=s.id inner join salle salle on salle.ID = ss.ID_SALLE inner join enseignant e on e.ID_UTILISATEUR = se.ID_ENSEIGNANT inner join utilisateur u on u.ID = e.ID_UTILISATEUR inner join site site on site.ID = salle.ID_SITE inner join type_cours tc on tc.ID = s.ID_TYPE inner join groupe g on sg.ID_GROUPE = g.ID inner join promotion pr on pr.ID=g.ID_PROMOTION");
            while(rset.next()){
                 model.addRow(new Object[]{rset.getString("s.ID"), rset.getString("u.NOM"), rset.getString("c.NOM"), rset.getString("s.SEMAINE"), rset.getString("s.JOUR"), rset.getString("pr.NOM"), rset.getString("s.SEMAINE")});
                    
            
        
                    }
            
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Professeur = new javax.swing.JComboBox<>();
        TypeCours = new javax.swing.JComboBox<>();
        Promo = new javax.swing.JComboBox<>();
        Td = new javax.swing.JComboBox<>();
        Salle = new javax.swing.JComboBox<>();
        Site = new javax.swing.JComboBox<>();
        Semaine = new javax.swing.JTextField();
        Jour = new javax.swing.JComboBox<>();
        Heure = new javax.swing.JComboBox<>();
        Cours = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        retour = new javax.swing.JToggleButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Professeur : M.");

        jLabel2.setText("Promo :");

        jLabel3.setText("TD :");

        jLabel4.setText("Heure de debut :");

        jLabel5.setText("Type de cours :");

        jLabel6.setText("Semaine :");

        jLabel7.setText("Jour :");

        jToggleButton1.setText("Ajouter");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Salle :");

        jLabel9.setText("Site :");

        Semaine.setText("24");
        Semaine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SemaineActionPerformed(evt);
            }
        });

        Jour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi" }));

        Heure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "10", "13", "15", "17" }));

        Cours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoursActionPerformed(evt);
            }
        });

        jLabel10.setText("Cours :");

        jLabel11.setText("H00");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setText("Ajouter un Cours");

        retour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vue/home.png"))); // NOI18N
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Supprimer un Cours");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Professeur", "Cours", "Semaine", "Jour", "Promo", "TD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jToggleButton2.setText("Supprimer");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jLabel14.setText("Id du cours a supprimer :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Salle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Promo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Professeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(2, 2, 2)
                                .addComponent(Cours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Td, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Heure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(66, 66, 66)
                        .addComponent(Jour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jToggleButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TypeCours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(42, 42, 42)
                        .addComponent(Semaine, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(372, 372, 372)
                        .addComponent(jLabel13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(retour, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(Professeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(Promo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(Heure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(TypeCours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Cours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(Site, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Salle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(Td, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(Jour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(Semaine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton1)
                        .addGap(140, 140, 140))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jToggleButton2)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(retour))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            Statement stmt;
            Connection conn;
            ResultSet rset;
            PreparedStatement pst;
            String nameDatabase = "emploisdutemps";
            String loginDatabase = "root";
            String passwordDatabase = "";
            int idcours = 0, idtype = 0, idseance =0, idUtilisateur1 =0;
            int idpromo =0, idgroupe =0, idsite=0, idsalle=0;
            
            
            Class.forName("com.mysql.jdbc.Driver");
            String urlDatabase = "jdbc:mysql://localhost:3306/" + nameDatabase;
            conn = DriverManager.getConnection(urlDatabase, loginDatabase, passwordDatabase);
            stmt = conn.createStatement();
            
            rset = stmt.executeQuery("SELECT ID FROM `cours` where NOM ='" + this.Cours.getSelectedItem()+"'");
            while(rset.next()){
                 idcours = rset.getInt("ID");
            }
            
            rset = stmt.executeQuery("SELECT ID FROM `type_cours` where NOM ='" + this.TypeCours.getSelectedItem()+"'");
            while(rset.next()){
                 idtype = rset.getInt("ID");
            }
            stmt.executeUpdate("INSERT INTO `seance`(`SEMAINE`, `JOUR`, `HEURE_DEBUT`, `HEURE_FIN`, `ETAT`, `ID_COURS`, `ID_TYPE`) VALUES ("+this.Semaine.getText()+",'"+this.Jour.getSelectedItem()+"',"+this.Heure.getSelectedItem()+","+this.Heure.getSelectedItem()+",1,"+idcours+","+idtype+")",Statement.RETURN_GENERATED_KEYS);
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()){
                 idseance =rs.getInt(1);
            }
            
            rset = stmt.executeQuery("SELECT ID FROM `Utilisateur` where NOM ='" + this.Professeur.getSelectedItem()+"'");
            while(rset.next()){
                 idUtilisateur1 = rset.getInt("ID");
            } 

            stmt.executeUpdate("INSERT INTO `seance_enseignant`(`ID_SEANCE`, `ID_ENSEIGNANT`) VALUES ("+idseance+","+idUtilisateur1+")");

            rset = stmt.executeQuery("SELECT ID FROM `promotion` where NOM ='" + this.Promo.getSelectedItem()+"'");
            while(rset.next()){
                 idpromo = rset.getInt("ID");
            } 
            
            rset = stmt.executeQuery("SELECT ID FROM `groupe` where NOM ='" + this.Td.getSelectedItem()+"' && ID_PROMOTION = "+idpromo+"");
            while(rset.next()){
                 idgroupe = rset.getInt("ID");
            }

            stmt.executeUpdate("INSERT INTO `seance_groupes`(`ID_SEANCE`, `ID_GROUPE`) VALUES ("+idseance+","+idgroupe+")");
            
            rset = stmt.executeQuery("SELECT ID FROM `site` where NOM ='" + this.Site.getSelectedItem()+"'");
            while(rset.next()){
                 idsite = rset.getInt("ID");
            } 
            
            rset = stmt.executeQuery("SELECT ID FROM `salle` where NOM ='" + this.Salle.getSelectedItem()+"'");
            while(rset.next()){
                 idsalle = rset.getInt("ID");
            }
            stmt.executeUpdate("INSERT INTO `seance_salle`(`ID_SEANCE`, `ID_SALLE`) VALUES ("+idseance+","+idsalle+")");

             JOptionPane.showMessageDialog(null, "Cours ajouté avec succés !");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ajoutcours.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ajoutcours.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void SemaineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SemaineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SemaineActionPerformed

    private void CoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoursActionPerformed

    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        Menu menu = null;
        try {
            menu = new Menu(this.getId());
        } catch (SQLException ex) {
            Logger.getLogger(ajoutcours.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu.setVisible(true);
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_retourActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed

        try {
            Statement stmt;
            Connection conn;
            ResultSet rset;
            PreparedStatement pst;
            String nameDatabase = "emploisdutemps";
            String loginDatabase = "root";
            String passwordDatabase = "";
            
            Class.forName("com.mysql.jdbc.Driver");
            String urlDatabase = "jdbc:mysql://localhost:3306/" + nameDatabase;
            conn = DriverManager.getConnection(urlDatabase, loginDatabase, passwordDatabase);
            stmt = conn.createStatement();
            
            stmt.executeUpdate("DELETE FROM `seance` WHERE ID ='" + this.jTextField1.getText()+"'");

            JOptionPane.showMessageDialog(null, "Cours supprimé avec succés !");

// TODO add your handling code here:
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ajoutcours.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ajoutcours.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ajoutcours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ajoutcours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ajoutcours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ajoutcours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ajoutcours().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cours;
    private javax.swing.JComboBox<String> Heure;
    private javax.swing.JComboBox<String> Jour;
    private javax.swing.JComboBox<String> Professeur;
    private javax.swing.JComboBox<String> Promo;
    private javax.swing.JComboBox<String> Salle;
    private javax.swing.JTextField Semaine;
    private javax.swing.JComboBox<String> Site;
    private javax.swing.JComboBox<String> Td;
    private javax.swing.JComboBox<String> TypeCours;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton retour;
    // End of variables declaration//GEN-END:variables
}
